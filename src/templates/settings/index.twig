{% extends "bigcommerce/settings/_layout" %}
{% import '_includes/forms.twig' as forms %}
{% set fullPageForm = true %}

{% block content %}
    {% set headlessMode = craft.app.config.general.headlessMode %}
    {{ actionInput('bigcommerce/settings/save-settings') }}
    {{ redirectInput('bigcommerce/settings') }}

    <div id="products" class="hidden">

        {{ forms.editableTableField({
            label: "Routing Settings"|t('bigcommerce'),
            instructions: "Configure the product’s front-end routing settings."|t('bigcommerce'),
            id: 'routing',
            name: 'settings',
            cols: {
                uriFormat: {
                    type: 'singleline',
                    heading: "Product URI Format"|t('bigcommerce'),
                    info: "What product URIs should look like."|t('bigcommerce'),
                    placeholder: "Leave blank if products don’t have URLs"|t('bigcommerce'),
                    code: true
                },
                template: not headlessMode ? {
                    type: 'template',
                    heading: "Template"|t('app'),
                    info: "Which template should be loaded when a product’s URL is requested."|t('bigcommerce'),
                    code: true
                },
            }|filter,
            rows: {
                'routing': {
                    uriFormat: {
                        value: settings.uriFormat ?? null,
                        hasErrors: settings.hasErrors('uriFormat') ?? false
                    },
                    template: not headlessMode ? {
                        value: settings.template ?? null,
                        hasErrors: settings.hasErrors('template') ?? false,
                    }
                }
            },
            allowAdd: false,
            allowDelete: false,
            allowReorder: false,
            errors: []|unique
        }) }}

        {{ forms.fieldLayoutDesignerField({
            fieldLayout: settings.getProductFieldLayout(),
        }) }}
    </div>

    <div id="api">
        {{ forms.autosuggestField({
            first: true,
            label: 'API Client ID'|t('bigcommerce'),
            id: 'clientId',
            name: 'settings[clientId]',
            required: true,
            value: settings.clientId,
            errors: settings.getErrors('clientId'),
            suggestEnvVars: true,
            suggestAliases: true,
            autofocus: true,
        }) }}

        {{ forms.autosuggestField({
            label: 'API Secret Key'|t('bigcommerce'),
            id: 'clientSecret',
            name: 'settings[clientSecret]',
            required: true,
            value: settings.clientSecret,
            errors: settings.getErrors('clientSecret'),
            suggestEnvVars: true,
            suggestAliases: true,
        }) }}

        {{ forms.autosuggestField({
            label: 'Access Token'|t('bigcommerce'),
            id: 'accessToken',
            name: 'settings[accessToken]',
            required: true,
            value: settings.accessToken,
            errors: settings.getErrors('accessToken'),
            suggestEnvVars: true,
            suggestAliases: true,
        }) }}

        {{ forms.autosuggestField({
            label: 'Store ID'|t('bigcommerce'),
            instructions: 'The BigCommerce store hash ID.'|t('bigcommerce'),
            id: 'storeHash',
            name: 'settings[storeHash]',
            required: true,
            value: settings.storeHash,
            errors: settings.getErrors('storeHash'),
            suggestEnvVars: true,
            suggestAliases: true,
        }) }}
        {% set manageChannelsUrl = url('bigcommerce/channels') %}
        {{ forms.autosuggestField({
            label: 'Sales Channel'|t('bigcommerce'),
            instructions: "If you're not sure what this is, enter 1. <a class=\"go\" href=\"#{manageChannelsUrl}\">Manage channels</a>"|t('bigcommerce'),
            name: 'settings[defaultChannel]',
            required: true,
            value: settings.defaultChannel,
            errors: settings.getErrors('defaultChannel'),
            suggestEnvVars: true,
            suggestAliases: true,
        }) }}
{#
When we're ready for multi-channel support:

        {% set siteRows = [] %}
        {% set siteErrors = settings.getErrors('siteSettings') %}

        {% for site in craft.app.sites.getAllSites() %}
            {% set siteSettings = section.siteSettings[site.id] ?? null %}
            {% if siteSettings %}
                {% for attribute, errors in siteSettings.getErrors() %}
                    {% set siteErrors = siteErrors|merge(errors) %}
                {% endfor %}
            {% endif %}
            {% set siteRows = siteRows|merge({
                (site.handle): {
                    heading: site.name|t('site')|e,
                    enabled: include('_includes/forms/lightswitch', {
                        name: 'sites['~site.handle~'][enabled]',
                        on: true,
                        value: site.id,
                        small: true
                    }),
                    channel: include('_includes/forms/select', {
                        name: 'sites['~site.handle~'][channel]',
                        value: null
                    }),
                }|filter
            }) %}
        {% endfor %}


        {{ forms.editableTableField({
            label: "Site Settings"|t('app'),
            instructions: "Choose which sites should use which BigCommerce channel."|t('bigcommerce'),
            id: 'channelSites',
            name: 'channelSites',
            cols: {
                heading: {
                    type: 'heading',
                    heading: "Site"|t('app'),
                    thin: true
                },
                enabled: {
                    type: 'heading',
                    thin: true
                },
                channel: {
                    type: 'select',
                    options: [{label: 'Disabled', value: ''}]|merge(channels|map(c => {label: c.name, value: c.id})),
                },
            }|filter,
            rows: siteRows,
            fullWidth: true,
            allowAdd: false,
            allowDelete: false,
            allowReorder: false,
            errors: siteErrors|unique
        }) }}
        #}
    </div>


{% endblock %}