{# @var craft \craft\web\twig\variables\CraftVariable #}
{% extends "_layouts/cp" %}
{% import '_includes/forms.twig' as forms %}
{% set selectedSubnavItem = 'webhooks' %}

{% set title = "Webhooks"|t('bigcommerce') %}

{% set navItems = {} %}

{% block content %}


    <div class="{{ containsAllWebhooks ? 'hidden' : '' }}">
        <p>{{ "Create the webhooks for the current environment."|t('bigcommerce') }}</p>
        <form method="POST">
            {{ forms.textField({
                label: 'Base URL Override'|t('bigcommerce'),
                type: 'url',
                placeholder: 'https://example.ngrok.io',
                name: 'baseUrlOverride',
                instructions: 'You may use this field to override the base URL when creating webhooks. This is useful for local testing with ngrok.'|t('bigcommerce')
            }) }}
            {{ actionInput('bigcommerce/webhooks/create') }}
            {{ redirectInput('bigcommerce/webhooks') }}
            {{ csrfInput() }}
            <button class="btn primary" type="submit">{{ "Create Webhooks"|t('bigcommerce') }}</button>
        </form>
    </div>

    {# Divs needed for the Admin Table js below #}
    <div class="field">
        <div id="webhooks-container">
        </div>
    </div>

    {% set tableData = [] %}
    {% for webhook in webhooks %}
        {% set expectedSecret = settings.getWebhookSecret(true) %}
        {% set hasSecret = webhook.headers['x-secret'] is defined %}
        {% set secret = webhook.headers['x-secret'] ?? null %}
        {% set secretMatches = hasSecret and secret == expectedSecret %}

        {% set secretState = 'missing' %}
        {% if hasSecret and secretMatches %}
            {% set secretState = 'matches' %}
        {% elseif hasSecret and not secretMatches %}
            {% set secretState = 'mismatch' %}
        {% endif %}
        {% set tableData = tableData|merge([{
            id: webhook.id,
            is_active: webhook.is_active,
            secret_status: secretState,
            created_at: webhook.created_at|datetime('long'),
            title: webhook.scope,
            address: webhook.destination
        }]) %}
    {% endfor %}

    {% js %}
        var isActiveCallback = function(value) {
            return value ? '<span class="status live" role="img" aria-label="Status: Active"></span>' :
                    '<span class="status expired" role="img" aria-label="Status: Inactive"></span>';
        };
        var secretCallback = function(value) {
            if (value === 'missing') {
                return '<span class="status expired" role="img" aria-label="Status: Missing"></span> Missing';
            }
            if (value === 'matches') {
                return '<span class="status live" role="img" aria-label="Status: Match"></span> Matches';
            }
            return '<span class="status pending" role="img" aria-label="Status: Mismatch"></span> Mismatch';
        };

        var columns = [
            { name: '__slot:title', title: Craft.t('bigcommerce', 'Topic') },
            { name: 'address', title: Craft.t('bigcommerce', 'URL') },
            { name: 'created_at', title: Craft.t('bigcommerce', 'Date Created') },
            { name: 'is_active', title: Craft.t('bigcommerce', 'Is Active'), callback: isActiveCallback },
            { name: 'secret_status', title: Craft.t('bigcommerce', 'Secret'), callback: secretCallback },
        ];

        new Craft.VueAdminTable({
        fullPane: false,
        columns: columns,
        container: '#webhooks-container',
        deleteAction: 'bigcommerce/webhooks/delete',
        deleteConfirmationMessage: Craft.t('bigcommerce', "Are you sure you want to delete this webhook?"),
        deleteFailMessage: Craft.t('bigcommerce', "Webhook could not be deleted"),
        deleteSuccessMessage: Craft.t('bigcommerce', "Webhook deleted"),
        emptyMessage: Craft.t('bigcommerce', 'No webhooks exist yet.'),
        tableData: {{ tableData|json_encode|raw }}
        });
    {% endjs %}
{% endblock %}

